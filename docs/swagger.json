{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Harmoniq API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Harmoniq app"
  },
  "servers": [
    {
      "url": "https://harmoniq-backend-qo0h.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Articles",
      "description": "Operations about articles."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
     {
      "name": "Users",
      "description": "Operations about users/author."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register user with payload",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "User`s name",
                    "type": "string",
                    "example": "Carl Smith"
                  },
                  "email": {
                    "description": "User`s email",
                    "type": "string",
                    "example": "my.mail@mail.com"
                  },
                  "password": {
                    "description": "User`s password",
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "name",
                        "email",
                        "_id",
                        "createdAt",
                        "updatedAt"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Carl Smith"
                        },
                        "email": {
                          "type": "string",
                          "example": "my.mail@mail.com"
                        },
                        "_id": {
                          "type": "string",
                          "example": "65ca67e7ae7f10c88b598384"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-06-22T17:39:49.416Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-06-22T17:39:49.416Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login user with payload",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User`s email",
                    "type": "string",
                    "example": "my.mail@mail.com"
                  },
                  "password": {
                    "description": "User`s password",
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "J6k5alkWa2rx55EkPirVRf/Gome5ecSqRYiqfuC2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User logged out successfully"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user session",
        "operationId": "refreshUserSession",
        "description": "Refresh user session snd get new access token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User's session refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "J6k5alkWa2rx55EkPirVRf/Gome5ecSqRYiqfuC2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send reset password email",
        "operationId": "sendResetEmail",
        "description": "Send reset password email to user with payload",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "description": "User`s email",
                    "type": "string",
                    "example": "my.mail@mail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email was successfully sent!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password",
        "operationId": "resetUserPassword",
        "description": "Reset user password with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "password"
                ],
                "properties": {
                  "token": {
                    "description": "Reset password token",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2ODRhYWI2OTQzNjdiM2IyZTgzOWUwNDciLCJlbWFpbCI6InNlcmhpaV9sdWtpYW5lbmtvQG1ldGEudWEiLCJpYXQiOjE3NDk5MTE1NTIsImV4cCI6MTc0OTkxMjQ1Mn0.iCciicOwfBTJSjw0OAAaxZj3qfm5m8ptAGsLMpfXy0E"
                  },
                  "password": {
                    "description": "User`s password",
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password was successfully reset!"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/articles": {
      "post": {
        "tags": [
          "Articles"
        ],
        "summary": "Create article",
        "operationId": "createArticle",
        "description": "Create article with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "desc",
                  "photo"
                ],
                "properties": {
                  "title": {
                    "description": "Article's title",
                    "type": "string",
                    "example": "Some title"
                  },
                  "desc": {
                    "description": "Article's description",
                    "type": "string",
                    "example": "description lorem100"
                  },
                  "photo": {
                    "description": "Article's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Article created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created article!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/article"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get list of articles",
        "operationId": "getArticles",
        "description": "Get list of articles with parination",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination",
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "default": 12,
              "example": 12
            },
            "description": "Number of articles per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of articles retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found articles!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "articles",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "articles": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/article"
                          }
                        },
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "perPage": {
                          "type": "integer",
                          "example": 12
                        },
                        "totalItems": {
                          "type": "integer",
                          "example": 90
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 9
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/articles/{id}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get article by id",
        "operationId": "getArticleById",
        "description": "Get article by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get article by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/article"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Articles"
        ],
        "summary": "Patch article",
        "operationId": "patchArticle",
        "description": "Update the article with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "Article's title",
                    "type": "string",
                    "example": "Some title"
                  },
                  "desc": {
                    "description": "Article's description",
                    "type": "string",
                    "example": "description lorem100"
                  },
                  "photo": {
                    "description": "Article's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully patched the article!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched the article!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/article"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Articles"
        ],
        "summary": "Delete article",
        "operationId": "deleteArticle",
        "description": "Delete article with given id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Article delete"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/authors": {
"get": {
  "tags": ["Users"],
  "summary": "Get all users/authors",
  "operationId": "getAllUsers",
  "description": "Get all users",
  "parameters": [
    {
      "in": "query",
      "name": "page",
      "schema": {
        "type": "integer",
        "default": 1
      },
      "description": "Page number for pagination",
      "example": 1
    },
    {
      "in": "query",
      "name": "perPage",
      "schema": {
        "type": "integer",
        "default": 20
      },
      "description": "Number of users/authors per page",
      "example": 20
    }
  ],
  "responses": {
    "200": {
      "description": "Successfully found users!",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "required": ["status", "message", "data"],
            "properties": {
              "status": {
                "type": "integer",
                "example": 200
              },
              "message": {
                "type": "string",
                "example": "Successfully found users!"
              },
              "data": {
                "type": "object",
                "required": [
                  "users",
                  "page",
                  "perPage",
                  "totalItems",
                  "totalPages",
                  "hasNextPage",
                  "hasPreviousPage"
                ],
                "properties": {
                  "users": {
                    "type": "array",
                    "items": {
                      "$ref": "../swagger/components/schemas/users.yaml"
                    }
                  },
                  "page": {
                    "type": "integer",
                    "example": 1
                  },
                  "perPage": {
                    "type": "integer",
                    "example": 20
                  },
                  "totalItems": {
                    "type": "integer",
                    "example": 50
                  },
                  "totalPages": {
                    "type": "integer",
                    "example": 5
                  },
                  "hasNextPage": {
                    "type": "boolean",
                    "example": false
                  },
                  "hasPreviousPage": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "404": {
      "$ref": "../swagger/components/responses/404.yaml"
    }
  }
}
    },
    "/authors/{id}": {
    "get":
{
  "tags": ["Users"],
  "summary": "Get user/author by id",
  "operationId": "getUserById",
  "description": "Get user/author by id",
  "parameters": [
    {
      "in": "query",
      "name": "id",
      "required": true,
      "schema": {
        "type": "string",
        "example": "688507eb52768403f159c9c2"
      }
    }
  ],
  "responses": {
    "200": {
      "description": "Successfully found user with id 688507eb52768403f159c9c2!",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "required": ["status", "message", "data"],
            "properties": {
              "status": {
                "type": "integer",
                "example": 200
              },
              "message": {
                "type": "string",
                "example": "Successfully found user with id 688507eb52768403f159c9c2!"
              },
              "data": {
                "$ref": "../swagger/components/schemas/users.yaml"
              }
            }
          }
        }
      }
    },
    "401": {
      "$ref": "../swagger/components/responses/401.yaml"
    },
    "404": {
      "$ref": "../swagger/components/responses/404.yaml"
    }
  }
}
    },
    "/authors/saved-articles": {
"get":
{
  "tags": ["Users"],
  "summary": "Get user's saved article",
  "operationId": "getSavedArticlesByAuthorId",
  "description": "Get user's saved article",
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "parameters": [
    {
      "in": "path",
      "name": "id",
      "required": true,
      "schema": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": ["68498236a100312bea078fe7", "688507eb52768403f159c9c2"]
      }
    }
  ],
  "responses": {
    "200": {
      "description": "Successfully found user's saved articles with id 688507eb52768403f159c9c2!",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "required": ["status", "message", "data"],
            "properties": {
              "status": {
                "type": "integer",
                "example": 200
              },
              "message": {
                "type": "string",
                "example": "Successfully found user's saved articles with id 688507eb52768403f159c9c2!"
              },
              "data": {
                "$ref": "../swagger/components/schemas/users.yaml"
              }
            }
          }
        }
      }
    },
    "401": {
      "$ref": "../swagger/components/responses/401.yaml"
    },
    "404": {
      "$ref": "../swagger/components/responses/40.yaml"
    }
  }
}
    },
    "/authors/saved-articles/{id}": {
"patch:": {
  "tags": ["Users"],
  "summary": "Patch user's saved article by id",
  "operationId": "saveArticleByAuthorId",
  "description": "Update user's saved article by id",
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "parameters": [
    {
      "in": "path",
      "name": "id",
      "required": true,
      "schema": {
        "type": "string",
        "example": "688507eb52768403f159c9c2"
      }
    }
  ],
  "responses": {
    "200": {
      "description": "Article added to saved list!",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "required": ["status", "message", "data"],
            "properties": {
              "status": {
                "type": "integer",
                "example": 200
              },
              "message": {
                "type": "string",
                "example": "Article added to saved list!"
              },
              "data": {
                "$ref": "../swagger/components/schemas/users.yaml"
              }
            }
          }
        }
      }
    },
    "401": {
      "$ref": "../swagger/components/responses/401.yaml"
    },
    "404": {
      "$ref": "../swagger/components/responses/404.yaml"
    }
  }
},
"delete": {
  "tags": ["Users"],
  "summary": "Delete user's saved article by id",
  "operationId": "removeSavedArticleByAuthorId",
  "description": "Delete user's saved article by id",
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "parameters": [
    {
      "in": "path",
      "name": "id",
      "required": true,
      "schema": {
        "type": "string",
        "example": "688507eb52768403f159c9c2"
      }
    }
  ],
  "responses": {
    "204": {
      "description": "Article removed from saved list"
    },
    "401": {
      "$ref": "../swagger/components/responses/401.yaml"
    },
    "404": {
      "$ref": "../swagger/components/responses/404.yaml"
    }
  }
}
    },
    "/authors/{id}/articles": {
"get": {
  "tags": ["Users"],
  "summary": "Get own articles",
  "operationId": "getOwnArticlesByAuthorId",
  "description": "Get own articles",
  "parameters": [
    {
      "in": "query",
      "name": "id",
      "required": true,
      "schema": {
        "type": "string",
        "example": "688507eb52768403f159c9c2"
      }
    }
  ],
  "responses": {
    "200": {
      "description": "Successfully found user's own articles with id 688507eb52768403f159c9c2!",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "required": ["status", "message", "data"],
            "properties": {
              "status": {
                "type": "integer",
                "example": 200
              },
              "message": {
                "type": "string",
                "example": "Successfully found user's saved articles with id 688507eb52768403f159c9c2!"
              },
              "data": {
                "$ref": "../swagger/components/schemas/users.yaml"
              }
            }
          }
        }
      }
    },
    "404": {
      "$ref": "../swagger/components/responses/404.yaml"
    }
  }
}
}
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "NotFound error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Article not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "article": {
        "type": "object",
        "required": [
          "_id",
          "title",
          "img",
          "desc",
          "rate",
          "ownerId",
          "date"
        ],
        "properties": {
          "_id": {
            "description": "Article's id",
            "type": "string",
            "example": "688385d5fd28844fe82bc4b6"
          },
          "title": {
            "description": "Article's title",
            "type": "string",
            "example": "Some title"
          },
          "img": {
            "description": "Link to article's image",
            "type": "string",
            "example": "https://res.cloudinary.com/dok3yyfgg/image/upload/v1753449944/g2glnvmdpwgyyuxfj6dl.jpg"
          },
          "desc": {
            "description": "Article's description",
            "type": "string",
            "example": "description lorem100"
          },
          "rate": {
            "description": "Article's rate",
            "type": "number",
            "example": 0
          },
          "ownerId": {
            "description": "Id of the user who created the article",
            "type": "string",
            "example": "65e4decdd286b30065d54af8"
          },
          "ownerName": {
            "description": "Name of the user who created the article",
            "type": "string",
            "example": "John Doe"
          },
          "date": {
            "description": "Article's creation date",
            "type": "string",
            "example": "2025-07-25"
          }
        }
      },
      "users": {
  "type": "object",
  "required": [
    "name",
    "email",
    "password"
  ],
  "properties": {
    "_id": {
      "description": "User's id",
      "type": "string",
      "example": "688507eb52768403f159c9c2"
    },
    "name": {
      "description": "User's name",
      "type": "string",
      "example": "alicewow"
    },
    "email": {
      "description": "User's email",
      "type": "string",
      "example": "qwerty123@gmail.com"
    },
    "savedArticles": {
      "description": "Saved articles for User",
      "type": "array",
      "items": {
        "type": "string"
      },
      "example": ["68498236a100312bea078fe7", "688507eb52768403f159c9c2"]
    },
    "createdAt": {
      "description": "User's creation date",
      "type": "string",
      "example": "2025-07-25"
    },
    "updatedAt": {
      "description": "User's change date",
      "type": "string",
      "example": "2025-07-25"
    }
  }
}
},
    }
  }
